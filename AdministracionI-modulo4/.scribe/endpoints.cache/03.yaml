## Autogenerated by Scribe. DO NOT MODIFY.

name: Usuarios
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Usuarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos los usuarios.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id_usuario": 1,
              "empleado_id": 1,
              "username": "usuario123",
              "rol_id": 2,
              "created_at": "2025-07-06T16:40:06.000000Z",
              "updated_at": "2025-07-06T16:40:06.000000Z"
            }
          ]
        headers: []
        description: 'Listado de usuarios'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Usuarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo usuario.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      empleado_id:
        name: empleado_id
        description: 'ID del empleado.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      username:
        name: username
        description: 'Nombre de usuario.'
        required: true
        example: usuario123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: Contraseña.
        required: true
        example: secreto123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rol_id:
        name: rol_id
        description: 'ID del rol.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      empleado_id: 1
      username: usuario123
      password: secreto123
      rol_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id_usuario": 2,
            "empleado_id": 1,
            "username": "usuario123",
            "rol_id": 2,
            "created_at": "2025-07-06T16:40:06.000000Z",
            "updated_at": "2025-07-06T16:40:06.000000Z"
          }
        headers: []
        description: 'Usuario creado'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Campos inválidos o faltantes",
            "errors": {
              "username": {"El campo username es obligatorio."}
            }
          }
        headers: []
        description: 'Campos inválidos o faltantes'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id_usuario}'
    metadata:
      groupName: Usuarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar un usuario específico.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id_usuario:
        name: id_usuario
        description: 'El ID del usuario.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id_usuario: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id_usuario": 1,
            "empleado_id": 1,
            "username": "usuario123",
            "rol_id": 2,
            "created_at": "2025-07-06T16:40:06.000000Z",
            "updated_at": "2025-07-06T16:40:06.000000Z"
          }
        headers: []
        description: 'Usuario encontrado'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Usuario no encontrado"
          }
        headers: []
        description: 'Usuario no encontrado'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id_usuario}'
    metadata:
      groupName: Usuarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un usuario.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id_usuario:
        name: id_usuario
        description: 'El ID del usuario.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id_usuario: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      empleado_id:
        name: empleado_id
        description: 'ID del empleado.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      username:
        name: username
        description: 'Nombre de usuario.'
        required: false
        example: usuario123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: Contraseña.
        required: false
        example: secreto123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rol_id:
        name: rol_id
        description: 'ID del rol.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      empleado_id: 1
      username: usuario123
      password: secreto123
      rol_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id_usuario": 1,
            "empleado_id": 1,
            "username": "usuario123",
            "rol_id": 2,
            "created_at": "2025-07-06T16:40:06.000000Z",
            "updated_at": "2025-07-06T16:40:06.000000Z"
          }
        headers: []
        description: 'Usuario actualizado'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Campos inválidos o faltantes",
            "errors": {
              "username": {"El campo username es obligatorio."}
            }
          }
        headers: []
        description: 'Campos inválidos o faltantes'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id_usuario}'
    metadata:
      groupName: Usuarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un usuario.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id_usuario:
        name: id_usuario
        description: 'El ID del usuario.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id_usuario: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: 'Usuario eliminado'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Usuario no encontrado"
          }
        headers: []
        description: 'Usuario no encontrado'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
